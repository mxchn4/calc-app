name: C++ CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest # Or windows-latest, macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up CMake
      uses: jwlawson/actions-setup-cmake@v2
      with:
        cmake-version: '3.20.0' # Specify a CMake version

    - name: Set up C++ Build Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential

    - name: Configure CMake
      run: cmake -B build # Configure the project in a 'build' directory

    - name: Build Project
      run: cmake --build build --config Release # Build the project

    - name: Run Tests
      run: |
        cd build
        ctest --output-on-failure # Run tests using CTest and show output on failure

    - name: Deploy (Placeholder)
      # This step is a placeholder for your deployment logic.
      # Deployment steps would vary greatly depending on your project type
      # (e.g., publishing an executable, deploying to a server, creating a package).
      run: |
        echo "Deployment step would go here."
        echo "For example, you might copy build artifacts to a release directory,"
        echo "upload them to an artifact repository, or push to a deployment server."
        ls -F build/src # Example: List compiled executable
        # Example: if it's a Linux executable, it would be at build/src/my_cpp_project
        # cp build/src/my_cpp_project /path/to/deployment/location